"""init

Revision ID: aeb7a6208b8a
Revises: 
Create Date: 2025-09-25 20:11:59.126713

# https://testdriven.io/blog/fastapi-sqlmodel/#async-sqlmodel

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'aeb7a6208b8a'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_location_keywords'), table_name='location')
    op.drop_column('location', 'keywords')
    op.add_column('organicrank', sa.Column('keyword_id', sa.Integer(), nullable=False))
    op.drop_index(op.f('ix_organicrank_date'), table_name='organicrank')
    op.drop_constraint(op.f('organicrank_location_id_fkey'), 'organicrank', type_='foreignkey')
    op.create_foreign_key(None, 'organicrank', 'keyword', ['keyword_id'], ['id'])
    op.drop_column('organicrank', 'location_id')
    op.drop_column('organicrank', 'date')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('organicrank', sa.Column('date', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('organicrank', sa.Column('location_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'organicrank', type_='foreignkey')
    op.create_foreign_key(op.f('organicrank_location_id_fkey'), 'organicrank', 'location', ['location_id'], ['id'])
    op.create_index(op.f('ix_organicrank_date'), 'organicrank', ['date'], unique=False)
    op.drop_column('organicrank', 'keyword_id')
    op.add_column('location', sa.Column('keywords', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.create_index(op.f('ix_location_keywords'), 'location', ['keywords'], unique=False)
    # ### end Alembic commands ###
